; ModuleID = 'main_wtiming.c'
target datalayout = "E-m:e-p:32:32-i64:64-f128:64-n32-S64"
target triple = "sparc-unknown-none-elf"

@.str = private unnamed_addr constant [13 x i8] c"return: 10\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"return: 1\0A\0A\00", align 1

; Function Attrs: nounwind
define i32* @ary3(i32 %n) #0 {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32*, align 4
  %y = alloca i32*, align 4
  %result = alloca i32*, align 4
  store i32 %n, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = call noalias i8* @calloc(i32 %2, i32 4) #3
  %4 = bitcast i8* %3 to i32*
  store i32* %4, i32** %x, align 4
  %5 = load i32, i32* %1, align 4
  %6 = call noalias i8* @calloc(i32 %5, i32 4) #3
  %7 = bitcast i8* %6 to i32*
  store i32* %7, i32** %y, align 4
  %8 = call noalias i8* @malloc(i32 8) #3
  %9 = bitcast i8* %8 to i32*
  store i32* %9, i32** %result, align 4
  store i32 0, i32* %i, align 4
  br label %10

; <label>:10                                      ; preds = %20, %0
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %1, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %23

; <label>:14                                      ; preds = %10
  %15 = load i32, i32* %i, align 4
  %16 = add nsw i32 %15, 1
  %17 = load i32, i32* %i, align 4
  %18 = load i32*, i32** %x, align 4
  %19 = getelementptr inbounds i32, i32* %18, i32 %17
  store i32 %16, i32* %19, align 4
  br label %20

; <label>:20                                      ; preds = %14
  %21 = load i32, i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %10

; <label>:23                                      ; preds = %10
  store i32 0, i32* %k, align 4
  br label %24

; <label>:24                                      ; preds = %47, %23
  %25 = load i32, i32* %k, align 4
  %26 = icmp slt i32 %25, 1000
  br i1 %26, label %27, label %50

; <label>:27                                      ; preds = %24
  %28 = load i32, i32* %1, align 4
  %29 = sub nsw i32 %28, 1
  store i32 %29, i32* %i, align 4
  br label %30

; <label>:30                                      ; preds = %43, %27
  %31 = load i32, i32* %i, align 4
  %32 = icmp sge i32 %31, 0
  br i1 %32, label %33, label %46

; <label>:33                                      ; preds = %30
  %34 = load i32, i32* %i, align 4
  %35 = load i32*, i32** %x, align 4
  %36 = getelementptr inbounds i32, i32* %35, i32 %34
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %i, align 4
  %39 = load i32*, i32** %y, align 4
  %40 = getelementptr inbounds i32, i32* %39, i32 %38
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %41, %37
  store i32 %42, i32* %40, align 4
  br label %43

; <label>:43                                      ; preds = %33
  %44 = load i32, i32* %i, align 4
  %45 = add nsw i32 %44, -1
  store i32 %45, i32* %i, align 4
  br label %30

; <label>:46                                      ; preds = %30
  br label %47

; <label>:47                                      ; preds = %46
  %48 = load i32, i32* %k, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %k, align 4
  br label %24

; <label>:50                                      ; preds = %24
  %51 = load i32*, i32** %y, align 4
  %52 = getelementptr inbounds i32, i32* %51, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = load i32*, i32** %result, align 4
  %55 = getelementptr inbounds i32, i32* %54, i32 0
  store i32 %53, i32* %55, align 4
  %56 = load i32, i32* %1, align 4
  %57 = sub nsw i32 %56, 1
  %58 = load i32*, i32** %y, align 4
  %59 = getelementptr inbounds i32, i32* %58, i32 %57
  %60 = load i32, i32* %59, align 4
  %61 = load i32*, i32** %result, align 4
  %62 = getelementptr inbounds i32, i32* %61, i32 1
  store i32 %60, i32* %62, align 4
  %63 = load i32*, i32** %x, align 4
  %64 = bitcast i32* %63 to i8*
  call void @free(i8* %64) #3
  %65 = load i32*, i32** %y, align 4
  %66 = bitcast i32* %65 to i8*
  call void @free(i8* %66) #3
  %67 = load i32*, i32** %result, align 4
  ret i32* %67
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i32, i32) #0

; Function Attrs: nounwind
declare noalias i8* @malloc(i32) #0

; Function Attrs: nounwind
declare void @free(i8*) #0

; Function Attrs: nounwind
define i32 @main(i32 %argc, i8** %argv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 4
  %n = alloca i32, align 4
  %r_c = alloca i32*, align 4
  store i32 0, i32* %1
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 4
  %4 = load i32, i32* %2, align 4
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %0
  %7 = load i8**, i8*** %3, align 4
  %8 = getelementptr inbounds i8*, i8** %7, i32 1
  %9 = load i8*, i8** %8, align 4
  %10 = call i32 @atoi(i8* %9) #4
  br label %12

; <label>:11                                      ; preds = %0
  br label %12

; <label>:12                                      ; preds = %11, %6
  %13 = phi i32 [ %10, %6 ], [ 1500000, %11 ]
  store i32 %13, i32* %n, align 4
  %14 = load i32, i32* %n, align 4
  %15 = call i32* @ary3(i32 %14)
  store i32* %15, i32** %r_c, align 4
  %16 = load i32*, i32** %r_c, align 4
  %17 = getelementptr inbounds i32, i32* %16, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1000
  br i1 %19, label %20, label %29

; <label>:20                                      ; preds = %12
  %21 = load i32*, i32** %r_c, align 4
  %22 = getelementptr inbounds i32, i32* %21, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 1500000000
  br i1 %24, label %25, label %29

; <label>:25                                      ; preds = %20
  %26 = load i32*, i32** %r_c, align 4
  %27 = bitcast i32* %26 to i8*
  call void @free(i8* %27) #3
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0))
  store i32 10, i32* %1
  br label %33

; <label>:29                                      ; preds = %20, %12
  %30 = load i32*, i32** %r_c, align 4
  %31 = bitcast i32* %30 to i8*
  call void @free(i8* %31) #3
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0))
  store i32 1, i32* %1
  br label %33

; <label>:33                                      ; preds = %29, %25
  %34 = load i32, i32* %1
  ret i32 %34
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #1

declare i32 @printf(i8*, ...) #2

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.1 (tags/RELEASE_371/final)"}
