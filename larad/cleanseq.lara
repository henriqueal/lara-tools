/*      Ricardo Nobre                                   *       
 *      Departamento de Engenharia Inform√°tica          *       
 *      FEUP, Porto, Portugal                           *
 *      ricardo.nobre@fe.up.pt                          */      

aspectdef cleanseq
	input
		bestSeq, bestSeqLatency, compile, execute_and_report, minimumLat = 100;
	end

        println("");
        println("Cleaning Sequence...");
        var i = 0;
        while(i<bestSeq.length) {
                var newConfig = bestSeq.slice(0); // Clones optimization array.
                newConfig.splice(i, 1); // Removes one element from position 'i'.

                optimLevel = newConfig.join(" ");
                compile(optimLevel);

                var newLatency = undefined;
                newLatency = execute_and_report();

                if((newLatency == undefined) || (newLatency <= 0)) {	// Can it be 'undefined' anymore?
                        i = i + 1;
                        println("Problematic sequence: " + newConfig.join(" "));
                        continue;       // goes to the next iteration ignoring previous configuration
                }

                if(newLatency > bestSeqLatency) {       // Means new latency its worse than lantecy without removing optimization.
                        i = i + 1;
                        continue;
                }
                else {  // If smaller sequence has same or better latency then do the following.
                        //i = i - 1;
                        bestSeqLatency = newLatency;
                        bestSeq = newConfig;      // TODO: maybe needed to do slice(0)
                        // println("BETTER SOLUTION ACCEPTED");
                }
        }
end
