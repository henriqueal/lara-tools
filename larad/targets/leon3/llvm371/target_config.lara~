/*      Ricardo Nobre                                   *
 *      Departamento de Engenharia Informática          *
 *      FEUP, Porto, Portugal                           *
 *      ricardo.nobre@fe.up.pt                          */

aspectdef target_config

	output
		targetName, exporterName, exploreParams, sequences;
	end
	targetName = "leon3";
	exporterName = "tsimexporter";	


	exploreParams =     [

"-adce",
"-alignment-from-assumptions",
"-argpromotion",
"-assumption-cache-tracker",
"-barrier",
"-basicaa",
"-basiccg",
"-bdce",
"-block-freq",
"-branch-prob",
"-constmerge",
"-correlated-propagation",
"-deadargelim",
"-domtree",
"-dse",
"-early-cse",
"-elim-avail-extern",
"-float2int",
"-functionattrs",
"-globaldce",
"-globalopt",
"-gvn",
"-indvars",
"-inline",
"-inline-cost",
"-instcombine",
"-ipsccp",
"-jump-threading",
"-lazy-value-info",
"-lcssa",
"-licm",
"-loop-accesses",
"-loop-deletion",
"-loop-idiom",
"-loop-rotate",
"-loop-simplify",
"-loop-unroll",
"-loop-unswitch",
"-loop-vectorize",
"-loops",
"-lower-expect",
"-memcpyopt",
"-memdep",
"-mldst-motion",
"-no-aa",
"-prune-eh",
"-reassociate",
"-scalar-evolution",
"-sccp",
"-scoped-noalias",
"-simplifycfg",
"-slp-vectorizer",
"-sroa",
"-strip-dead-prototypes",
"-tailcallelim",
"-targetlibinfo",
"-tbaa",
"-tti",
"-verify"

/*
	// LLVM 3.7 (only ones existing on 41 kernels from TI with SA 1M iterations)
"-aa-eval",			// + Exhaustive Alias Analysis Precision Evaluator
"-adce",			// º Aggressive Dead Code Elimination
"-add-discriminators",		// + Add DWARF path discriminators
"-alignment-from-assumptions",	// º Alignment from assumptions
"-alloca-hoisting",		// + Hoisting alloca instructions in non-entry blocks to the entry block
"-always-inline",		// + Inliner for always_inline function
"-argpromotion",		// º Promote 'by reference' arguments to scalars
"-assumption-cache-tracker",	// º Assumption Cache Tracker
"-atomic-expand",		// + Expand Atomic calls in terms of either load-linked & store-conditional or cmpxchg
"-barrier",			// º A No-Op Barrier Pass
"-basicaa",			// º Basic Alias Analysis (stateless AA impl)
"-basiccg",			// º CallGraph Construction
"-bb-vectorize",		// + Basic-Block Vectorization
"-bdce",			// º Bit-Tracking Dead Code Elimination
"-block-freq",			// º Block Frequency Analysis
"-bounds-checking",		// + Run-time bounds checking
"-branch-prob",			// º Branch Probability Analysis
"-break-crit-edges",		// + Break critical edges in CFG
"-cfl-aa",			// + CFL-Based AA implementation
"-codegenprepare",		// + Optimize for code generation
"-consthoist",			// + Constant Hoisting
"-constmerge",			// º Merge Duplicate Global Constants
"-constprop",			// + Simple constant propagation
"-correlated-propagation",	// º Value Propagation
"-cost-model",			// + Cost Model Analysis
"-count-aa",			// + Count Alias Analysis Query Responses
"-da",				// Dependence Analysis
"-dce",				// Dead Code Elimination
"-deadargelim",			// Dead Argument Elimination
"-debug-aa",			// AA use debugger
"-delinearize",			// Delinearization
"-die",				// Dead Instruction Elimination
"-divergence",			// Divergence Analysis
"-domfrontier",			// Dominance Frontier Construction
"-domtree",			// Dominator Tree Construction
"-dse",				// Dead Store Elimination
"-early-cse",			// Early CSE
"-elim-avail-extern",		// Eliminate Available Externally Globals
"-flattencfg",			// Flatten the CFG
"-float2int",			// Float to int
"-functionattrs",		// Deduce function attributes
"-globaldce",			// Dead Global Elimination
"-globalopt",			// Global Variable Optimizer
"-globalsmodref-aa",		// Simple mod/ref analysis for globals
"-gvn",				// Global Value Numbering
"-indvars",			// Induction Variable Simplification
"-inline",			// Function Integration/Inlining
"-inline-cost",			// Inline Cost Analysis
"-instcombine",			// Combine redundant instructions
"-instcount",			// Counts the various types of Instructions
"-instnamer",			// Assign names to anonymous instructions
"-instrprof",			// Frontend instrumentation-based coverage lowering
"-instsimplify",		// Remove redundant instructions
"-intervals",			// Interval Partition Construction
"-ipconstprop",			// Interprocedural constant propagation
"-ipsccp",			// Interprocedural Sparse Conditional Constant Propagation
"-irce",			// Inductive range check elimination
"-iv-users",			// Induction Variable Users
"-jump-threading",		// Jump Threading
"-lazy-value-info",		// Lazy Value Information Analysis
"-lcssa",			// Loop-Closed SSA Form Pass
"-libcall-aa",			// LibCall Alias Analysis
"-licm",			// Loop Invariant Code Motion
"-lint",			// Statically lint-checks LLVM IR
"-load-combine",		// Combine Adjacent Loads
"-loop-accesses",		// Loop Access Analysis
"-loop-deletion",		// Delete dead loops
"-loop-distribute",		// Loop Distribition
//"-loop-extract",		
//"-loop-extract-single",
"-loop-idiom",
"-loop-instsimplify",
"-loop-interchange",
"-loop-reduce",
"-loop-reroll",
"-loop-rotate",
"-loop-simplify",
"-loop-unroll",
"-loop-unswitch",
"-loop-vectorize",
"-loops",
"-lower-expect",
"-loweratomic",
"-lowerbitsets",
"-lowerinvoke",
"-lowerswitch",
"-mem2reg",
"-memcpyopt",
"-memdep",
"-mergefunc",
"-mergereturn",
"-mldst-motion",
"-module-debuginfo",
"-nary-reassociate",
"-no-aa",
"-pa-eval",
"-partial-inliner",
"-partially-inline-libcalls",
"-place-backedge-safepoints-impl",
"-place-safepoints",
"-postdomtree",
"-prune-eh",
"-reassociate",
"-reg2mem",
"-regions",
"-rewrite-statepoints-for-gc",
"-rewrite-symbols",
"-safe-stack",
"-sancov",
"-scalar-evolution",
"-scalarizer",
"-scalarrepl",
"-scalarrepl-ssa",
"-sccp",
"-scev-aa",
"-scoped-noalias",
"-separate-const-offset-from-gep",
"-simplifycfg",
"-sink",
"-slp-vectorizer",
"-slsr",
"-speculative-execution",
"-sroa",
"-strip",
"-strip-dead-debug-info",
"-strip-dead-prototypes",
"-strip-debug-declare",
"-strip-nondebug",
"-structurizecfg",
"-tailcallelim",
"-targetlibinfo",
"-tbaa",
"-tti",
"-verify"

*/
/*
	// LLVM 3.7 ALL OPTIMIZATIONS
	"-aa-eval",
	"-adce",
	"-add-discriminators",
	"-alignment-from-assumptions",
	"-alloca-hoisting",
	"-always-inline",
	"-argpromotion",
//	"-asan",
//	"-asan-module",
	"-assumption-cache-tracker",
	"-atomic-expand",
	"-barrier",
	"-basicaa",
	"-basiccg",
	"-bb-vectorize",
	"-bdce",
	"-block-freq",
	"-bounds-checking",
	"-branch-prob",
	"-break-crit-edges",
	"-cfl-aa",
	"-codegenprepare",
	"-consthoist",
	"-constmerge",
	"-constprop",
	"-correlated-propagation",
	"-cost-model",
	"-count-aa",
	"-da",
	"-dce",
	"-deadargelim",
//	"-deadarghaX0r",
	"-debug-aa",
	"-delinearize",
//	"-dfsan",
	"-die",
	"-divergence",
	"-domfrontier",
	"-domtree",
//	"-dot-callgraph",
//	"-dot-cfg",
//	"-dot-cfg-only",
//	"-dot-dom",
//	"-dot-dom-only",
//	"-dot-postdom",
//	"-dot-postdom-only",
//	"-dot-regions",
//	"-dot-regions-only",
	"-dse",
//	"-dwarfehprepare",
	"-early-cse",
	"-elim-avail-extern",
	"-extract-blocks",
	"-flattencfg",
	"-float2int",
	"-functionattrs",
//	"-generic-to-nvvm",
	"-globaldce",
	"-globalopt",
	"-globalsmodref-aa",
	"-gvn",
	"-indvars",
	"-inline",
	"-inline-cost",
//	"-insert-gcov-profiling",
	"-instcombine",
	"-instcount",
	"-instnamer",
	"-instrprof",
	"-instsimplify",
	"-internalize",
	"-intervals",
	"-ipconstprop",
	"-ipsccp",
	"-irce",
	"-iv-users",
	"-jump-threading",
	"-lazy-value-info",
	"-lcssa",
	"-libcall-aa",
	"-licm",
	"-lint",
	"-load-combine",
	"-loop-accesses",
	"-loop-deletion",
	"-loop-distribute",
	"-loop-extract",
	"-loop-extract-single",
	"-loop-idiom",
	"-loop-instsimplify",
	"-loop-interchange",
	"-loop-reduce",
	"-loop-reroll",
	"-loop-rotate",
	"-loop-simplify",
	"-loop-unroll",
	"-loop-unswitch",
	"-loop-vectorize",
	"-loops",
	"-lower-expect",
	"-loweratomic",
	"-lowerbitsets",
	"-lowerinvoke",
	"-lowerswitch",
	"-mem2reg",
	"-memcpyopt",
	"-memdep",
	"-mergefunc",
	"-mergereturn",
	"-metarenamer",
	"-mldst-motion",
	"-module-debuginfo",
//	"-msan",
	"-nary-reassociate",
	"-no-aa",
//	"-nvptx-assign-valid-global-names",
//	"-nvptx-favor-non-generic",
//	"-nvptx-lower-alloca",
//	"-nvptx-lower-kernel-args",
//	"-nvvm-reflect",
	"-objc-arc",
	"-objc-arc-aa",
	"-objc-arc-apelim",
	"-objc-arc-contract",
	"-objc-arc-expand",
	"-pa-eval",
	"-partial-inliner",
	"-partially-inline-libcalls",
	"-place-backedge-safepoints-impl",
	"-place-safepoints",
	"-postdomtree",
//	"-print-alias-sets",
//	"-print-bb",
//	"-print-callgraph",
//	"-print-callgraph-sccs",
//	"-print-cfg-sccs",
//	"-print-dom-info",
//	"-print-externalfnconstants",
//	"-print-function",
//	"-print-memdeps",
//	"-print-memderefs",
//	"-print-module",
	"-prune-eh",
	"-reassociate",
	"-reg2mem",
	"-regions",
	"-rewrite-statepoints-for-gc",
	"-rewrite-symbols",
	"-safe-stack",
//	"-sample-profile",
	"-sancov",
	"-scalar-evolution",
	"-scalarizer",
	"-scalarrepl",
	"-scalarrepl-ssa",
	"-sccp",
	"-scev-aa",
	"-scoped-noalias",
	"-separate-const-offset-from-gep",
	"-simplifycfg",
	"-sink",
//	"-sjljehprepare",
	"-slp-vectorizer",
	"-slsr",
	"-speculative-execution",
	"-sroa",
	"-strip",
	"-strip-dead-debug-info",
	"-strip-dead-prototypes",
	"-strip-debug-declare",
	"-strip-nondebug",
	"-structurizecfg",
	"-tailcallelim",
	"-targetlibinfo",
	"-tbaa",
//	"-tsan",
	"-tti",
	"-verify",
//	"-view-callgraph",
//	"-view-cfg",
//	"-view-cfg-only",
//	"-view-dom",
//	"-view-dom-only",
//	"-view-postdom",
//	"-view-postdom-only",
//	"-view-regions",
//	"-view-regions-only",
//	"-winehprepare"

*/

/*
	// LLVM 3.5 ALL OPTIMIZATIONS
	"-aa-eval",
	"-adce",
	"-add-discriminators",
	"-alloca-hoisting",
	"-always-inline",
	"-argpromotion",
//	"-asan",
//	"-asan-module",
	"-atomic-ll-sc",
	"-barrier",
	"-basicaa",
	"-basiccg",
	"-bb-vectorize",
	"-block-freq",
	"-bounds-checking",
	"-branch-prob",
	"-break-crit-edges",
	"-codegenprepare",
	"-consthoist",
	"-constmerge",
	"-constprop",
	"-correlated-propagation",
	"-cost-model",
	"-count-aa",
	"-da",
//	"-datalayout",
	"-dce",
	"-deadargelim",
//	"-deadarghaX0r",
	"-debug-aa",
	"-debug-ir",
	"-delinearize",
	"-dfsan",
	"-die",
	"-domfrontier",
	"-domtree",
//	"-dot-callgraph",
//	"-dot-cfg",
//	"-dot-cfg-only",
//	"-dot-dom",
//	"-dot-dom-only",
//	"-dot-postdom",
//	"-dot-postdom-only",
//	"-dot-regions",
//	"-dot-regions-only",
	"-dse",
	"-early-cse",
	"-extract-blocks",
	"-functionattrs",
	"-generic-to-nvvm",
	"-globaldce",
	"-globalopt",
	"-globalsmodref-aa",
	"-gvn",
	"-indvars",
	"-inline",
	"-inline-cost",
//	"-insert-gcov-profiling",
	"-instcombine",
	"-instcount",
	"-instnamer",
	"-instsimplify",
	"-internalize",
	"-intervals",
	"-ipconstprop",
	"-ipsccp",
	"-iv-users",
	"-jump-instr-table-info",
	"-jump-threading",
	"-lazy-value-info",
	"-lcssa",
	"-libcall-aa",
	"-licm",
	"-lint",
	"-load-combine",
	"-loop-deletion",
	"-loop-extract",
	"-loop-extract-single",
	"-loop-idiom",
	"-loop-instsimplify",
	"-loop-reduce",
	"-loop-reroll",
	"-loop-rotate",
	"-loop-simplify",
	"-loop-unroll",
	"-loop-unswitch",
	"-loop-vectorize",
	"-loops",
	"-lower-expect",
	"-loweratomic",
	"-lowerinvoke",
	"-lowerswitch",
	"-mem2reg",
	"-memcpyopt",
	"-memdep",
	"-mergefunc",
	"-mergereturn",
	"-metarenamer",
	"-mldst-motion",
	"-module-debuginfo",
//	"-msan",
	"-no-aa",
	"-notti",
	"-nvptx-assign-valid-global-names",
	"-nvptx-favor-non-generic",
	"-nvvm-reflect",
	"-objc-arc",
	"-objc-arc-aa",
	"-objc-arc-apelim",
	"-objc-arc-contract",
	"-objc-arc-expand",
	"-partial-inliner",
	"-partially-inline-libcalls",
	"-postdomtree",
//	"-print-alias-sets",
//	"-print-bb",
//	"-print-callgraph",
//	"-print-callgraph-sccs",
//	"-print-cfg-sccs",
//	"-print-dom-info",
//	"-print-externalfnconstants",
//	"-print-function",
//	"-print-memdeps",
//	"-print-module",
//	"-print-used-types",
	"-prune-eh",
	"-reassociate",
	"-reg2mem",
	"-regions",
	"-sample-profile",
	"-scalar-evolution",
	"-scalarizer",
	"-scalarrepl",
	"-scalarrepl-ssa",
	"-sccp",
	"-scev-aa",
	"-separate-const-offset-from-gep",
	"-simplifycfg",
	"-sink",
	"-slp-vectorizer",
	"-sroa",
	"-strip",
	"-strip-dead-debug-info",
	"-strip-dead-prototypes",
	"-strip-debug-declare",
	"-strip-nondebug",
	"-structurizecfg",
	"-tailcallelim",
	"-targetlibinfo",
	"-tbaa",
//	"-tsan",
	"-verify",
//	"-view-callgraph",
//	"-view-cfg",
//	"-view-cfg-only",
//	"-view-dom",
//	"-view-dom-only",
//	"-view-postdom",
//	"-view-postdom-only",
//	"-view-regions",
//	"-view-regions-only"

*/

	/*		// LLVM 3.5 STABLE -O3
			"-adce",
			"-argpromotion",
			"-barrier",
			"-basicaa",
			"-basiccg",
			"-block-freq",
			"-branch-prob",
			"-constmerge",
			"-correlated-propagation",
			"-deadargelim",
			"-domtree",
			"-dse",
			"-early-cse",
			"-functionattrs",
			"-globaldce",
			"-globalopt",
			"-gvn",
			"-indvars",
			"-inline",
			"-inline-cost",
			"-instcombine",
			"-ipsccp",
			"-jump-threading",
			"-lazy-value-info",
			"-lcssa",
			"-licm",
			"-loop-deletion",
			"-loop-idiom",
			"-loop-rotate",
			"-loop-simplify",
			"-loop-unroll",
		"-loop-unswitch",
		"-loop-vectorize",
		"-loops",
		"-lower-expect",
		"-memcpyopt",
		"-memdep",
		"-mldst-motion",
		"-no-aa",
		"-notti",
		"-prune-eh",
		"-reassociate",
		"-scalar-evolution",
		"-sccp",
		"-simplifycfg",
		"-slp-vectorizer",
		"-sroa",
		"-strip-dead-prototypes",
		"-tailcallelim",
		"-targetlibinfo",
		"-tbaa",
		"-verify",
		"-verify-di"    // CAUSES LATENCY TO BE ALWAYS 12!? MAYBE I SHOULD JUST DO THIS AT THE END LINKE IN THE -O3 SEQUENCE
*/

			];

        sequences = [


/*
	// SEQUENCES FOR 11 KERNEL REFERENCE SET FOUND WITH 200K ITERATIONS (100K FOR ADCPM_CODE) OF SA
["-rewrite-symbols", "-simplifycfg", "-mem2reg", "-reg2mem", "-licm", "-reg2mem", "-loop-rotate", "-codegenprepare", "-basicaa", "-loop-unswitch", "-scalarrepl-ssa", "-extract-blocks", "-inline", "-functionattrs", "-simplifycfg", "-structurizecfg"],
["-instnamer", "-loop-rotate", "-place-backedge-safepoints-impl", "-bb-vectorize", "-early-cse", "-scalarrepl", "-verify", "-jump-threading", "-dce", "-iv-users", "-instrprof", "-break-crit-edges", "-always-inline", "-instcount", "-divergence", "-loop-distribute", "-scoped-noalias", "-loop-deletion", "-instcombine", "-objc-arc", "-argpromotion", "-adce", "-sccp", "-instsimplify", "-scalarizer", "-structurizecfg", "-da", "-tbaa", "-delinearize", "-iv-users", "-loop-accesses", "-functionattrs", "-alignment-from-assumptions", "-loweratomic", "-gvn", "-separate-const-offset-from-gep", "-functionattrs", "-sroa", "-constprop", "-lowerbitsets", "-strip-debug-declare", "-loop-extract-single", "-inline", "-pa-eval", "-lowerswitch", "-basiccg", "-objc-arc-aa", "-instcombine", "-simplifycfg", "-tbaa", "-globalsmodref-aa", "-instcombine", "-reg2mem", "-codegenprepare", "-reg2mem", "-scalarrepl", "-structurizecfg", "-jump-threading"],
["-codegenprepare", "-loop-rotate", "-scalarrepl", "-loop-reduce", "-loop-vectorize", "-gvn", "-reg2mem", "-early-cse", "-scalarizer", "-codegenprepare", "-instcombine", "-early-cse", "-instcombine", "-loop-rotate", "-cfl-aa", "-reassociate", "-gvn", "-break-crit-edges"],
["-sroa", "-loop-rotate", "-indvars", "-early-cse", "-loop-reduce", "-codegenprepare", "-loop-unroll", "-functionattrs", "-loop-reduce", "-prune-eh", "-adce", "-cost-model", "-loop-unswitch", "-loweratomic", "-loop-reroll", "-licm", "-globalsmodref-aa", "-loop-rotate", "-gvn", "-instsimplify", "-loop-deletion", "-tbaa", "-early-cse", "-branch-prob", "-place-backedge-safepoints-impl", "-basicaa", "-loop-reduce", "-inline", "-break-crit-edges", "-globalopt", "-sink", "-lint", "-branch-prob", "-codegenprepare", "-prune-eh", "-delinearize", "-globalopt", "-loop-reduce", "-instcombine", "-consthoist", "-break-crit-edges", "-mergereturn", "-loop-distribute", "-loop-unswitch", "-die", "-loop-extract-single", "-loop-unswitch", "-codegenprepare", "-constprop"],
["-loop-rotate", "-scalarrepl", "-indvars", "-loop-reduce", "-reg2mem", "-instcombine", "-sroa", "-codegenprepare", "-inline-cost", "-loop-unroll", "-jump-threading", "-loop-reduce", "-loop-deletion", "-break-crit-edges"],
["-licm", "-instcombine", "-gvn", "-scalarrepl", "-basicaa", "-loop-extract", "-indvars", "-reg2mem", "-inline", "-mem2reg", "-loop-rotate", "-break-crit-edges", "-separate-const-offset-from-gep", "-bb-vectorize"],
["-no-aa", "-gvn", "-intervals", "-loop-reduce", "-sroa", "-loop-extract-single", "-basicaa", "-dse", "-barrier", "-loop-rotate", "-loop-unroll", "-reg2mem", "-scalarrepl-ssa", "-slsr", "-loop-reduce", "-codegenprepare", "-jump-threading", "-argpromotion", "-loop-extract-single", "-partial-inliner", "-loop-rotate", "-loop-reduce", "-gvn", "-structurizecfg", "-jump-threading", "-extract-blocks", "-simplifycfg", "-instsimplify", "-loop-idiom", "-partial-inliner", "-inline", "-scalarrepl"],
["-loop-rotate", "-loop-extract", "-early-cse", "-inline", "-structurizecfg", "-strip-dead-debug-info", "-jump-threading", "-scalarrepl", "-simplifycfg", "-instcombine", "-loop-vectorize"],
["-gvn", "-scalarrepl-ssa", "-loop-rotate", "-loop-unroll", "-loop-vectorize", "-indvars", "-codegenprepare", "-slp-vectorizer", "-strip", "-flattencfg", "-always-inline", "-adce", "-domfrontier", "-break-crit-edges", "-rewrite-statepoints-for-gc", "-alignment-from-assumptions", "-mergefunc", "-reg2mem", "-flattencfg", "-sancov", "-verify", "-loop-simplify", "-mergefunc", "-constprop", "-add-discriminators", "-simplifycfg", "-gvn", "-strip-dead-prototypes", "-memcpyopt", "-objc-arc-aa", "-alloca-hoisting", "-constprop", "-adce", "-tti", "-constmerge", "-dce", "-loop-extract-single", "-cfl-aa", "-lazy-value-info", "-domfrontier", "-prune-eh", "-atomic-expand", "-mergefunc", "-sink", "-globalopt", "-flattencfg", "-sink", "-argpromotion", "-die", "-dse", "-verify", "-globalopt", "-deadargelim", "-tti", "-instcount", "-loweratomic", "-mem2reg", "-bb-vectorize", "-loop-unroll", "-mem2reg", "-codegenprepare", "-mldst-motion"],
["-codegenprepare", "-reassociate", "-sroa", "-separate-const-offset-from-gep", "-reassociate", "-reassociate", "-licm", "-loop-rotate", "-loop-vectorize", "-reassociate", "-instcombine", "-scalarizer", "-bb-vectorize", "-basicaa", "-instcombine", "-gvn", "-separate-const-offset-from-gep", "-simplifycfg", "-structurizecfg", "-jump-threading", "-loop-rotate", "-scalarizer", "-sink"],
["-sroa", "-loop-rotate", "-indvars", "-structurizecfg", "-loop-reduce", "-instcombine", "-early-cse", "-loop-unroll", "-irce", "-indvars", "-instsimplify"]
*/

	// SEQUENCES FOR TI KERNELS FOUND WITH 1M ITERATIONS OF SA
	["-strip-dead-debug-info", "-licm", "-basicaa", "-partially-inline-libcalls", "-codegenprepare", "-pa-eval", "-sroa", "-ipconstprop", "-loop-rotate", "-divergence", "-scalar-evolution", "-early-cse", "-objc-arc-contract", "-loop-extract", "-loop-instsimplify", "-sroa", "-strip-nondebug", "-loop-extract", "-inline", "-loop-vectorize", "-instcombine", "-loop-unswitch", "-loop-unswitch", "-loop-vectorize", "-jump-threading", "-block-freq", "-rewrite-statepoints-for-gc", "-add-discriminators", "-libcall-aa", "-jump-threading", "-separate-const-offset-from-gep", "-loop-unswitch", "-instcombine", "-jump-threading", "-objc-arc-expand", "-reg2mem", "-functionattrs", "-basiccg", "-objc-arc-aa", "-iv-users", "-objc-arc-contract", "-place-backedge-safepoints-impl", "-place-safepoints", "-break-crit-edges", "-basiccg", "-extract-blocks", "-loop-instsimplify", "-instsimplify", "-licm", "-deadargelim", "-loop-rotate", "-da", "-inline", "-loop-extract-single", "-scalarrepl-ssa", "-loop-extract", "-tti", "-lower-expect", "-always-inline", "-loop-rotate", "-jump-threading", "-loop-reroll", "-scev-aa", "-scalar-evolution", "-licm", "-loop-unswitch", "-place-safepoints"],

["-dce", "-divergence", "-verify", "-sink", "-inline-cost", "-divergence", "-consthoist", "-strip-nondebug", "-codegenprepare", "-iv-users", "-slsr", "-verify", "-indvars", "-argpromotion", "-lazy-value-info", "-alloca-hoisting", "-load-combine", "-objc-arc", "-loweratomic", "-scalarrepl-ssa", "-loop-accesses", "-module-debuginfo", "-lowerbitsets", "-tailcallelim", "-atomic-expand", "-sink", "-loop-idiom", "-adce", "-instcount", "-scalarrepl-ssa", "-irce", "-bdce", "-globalopt", "-gvn", "-tti", "-loop-rotate", "-adce", "-speculative-execution", "-scev-aa", "-tti", "-mem2reg", "-da", "-loop-vectorize", "-instcount", "-mem2reg", "-module-debuginfo", "-globalopt", "-float2int", "-gvn", "-instcombine", "-instcount", "-da", "-strip-debug-declare", "-add-discriminators", "-safe-stack", "-objc-arc-expand", "-sink", "-domfrontier", "-dce", "-separate-const-offset-from-gep", "-argpromotion", "-loop-simplify", "-lowerbitsets", "-globaldce", "-objc-arc-aa", "-lowerinvoke", "-loop-deletion", "-instnamer", "-loop-reduce", "-sink", "-objc-arc-aa", "-nary-reassociate", "-deadargelim", "-inline-cost", "-correlated-propagation", "-instrprof", "-scalarrepl-ssa", "-loop-simplify", "-partially-inline-libcalls", "-structurizecfg", "-loop-reduce", "-loweratomic", "-objc-arc-aa", "-deadargelim", "-postdomtree", "-memcpyopt", "-constprop", "-mergereturn", "-objc-arc-expand", "-branch-prob", "-gvn", "-scalar-evolution", "-float2int", "-loop-interchange", "-instsimplify", "-structurizecfg", "-loop-unswitch", "-slsr", "-block-freq", "-deadargelim", "-intervals", "-loop-unroll", "-mergefunc", "-gvn", "-loop-distribute", "-codegenprepare", "-atomic-expand", "-divergence", "-block-freq", "-dce", "-basiccg", "-lowerinvoke", "-module-debuginfo", "-alignment-from-assumptions", "-constmerge", "-always-inline", "-aa-eval", "-loop-deletion", "-loop-deletion", "-bb-vectorize", "-constprop", "-codegenprepare", "-loop-unswitch", "-memcpyopt", "-mergefunc", "-atomic-expand", "-correlated-propagation", "-instcombine"],

["-scalarrepl-ssa", "-bb-vectorize", "-loop-rotate", "-strip-debug-declare", "-indvars", "-instcombine", "-loop-reduce", "-gvn", "-loop-unroll", "-reg2mem", "-licm", "-basicaa", "-scalarrepl-ssa"],

["-early-cse", "-atomic-expand", "-codegenprepare", "-loop-extract-single", "-structurizecfg", "-branch-prob", "-lower-expect", "-objc-arc-apelim", "-loop-extract-single", "-extract-blocks", "-codegenprepare", "-partially-inline-libcalls", "-indvars", "-separate-const-offset-from-gep", "-loop-extract", "-loop-rotate", "-reg2mem", "-functionattrs", "-scalarizer", "-extract-blocks", "-die", "-extract-blocks", "-inline", "-loop-extract", "-inline", "-targetlibinfo", "-instcombine", "-codegenprepare", "-sroa", "-always-inline", "-gvn", "-alloca-hoisting", "-speculative-execution", "-jump-threading", "-loop-rotate", "-loop-unroll", "-loop-simplify", "-instcombine", "-debug-aa"],

["-instcombine", "-lowerbitsets", "-domfrontier", "-libcall-aa", "-scalarizer", "-die", "-codegenprepare", "-ipconstprop", "-nary-reassociate", "-loop-accesses", "-divergence", "-flattencfg", "-memcpyopt", "-globalopt", "-debug-aa", "-instcombine", "-loops", "-aa-eval", "-place-safepoints", "-loop-simplify", "-objc-arc-contract", "-instcombine", "-objc-arc-contract", "-loop-extract-single", "-assumption-cache-tracker", "-bounds-checking", "-libcall-aa", "-loop-reroll", "-add-discriminators", "-loop-unswitch", "-domfrontier", "-tailcallelim", "-extract-blocks", "-prune-eh", "-reg2mem", "-aa-eval", "-loop-unswitch", "-memdep", "-loop-extract-single", "-tti", "-partially-inline-libcalls", "-scev-aa", "-scalar-evolution", "-intervals", "-die", "-mldst-motion", "-argpromotion", "-mldst-motion", "-functionattrs", "-bounds-checking", "-loop-vectorize", "-scalarrepl-ssa", "-barrier", "-alignment-from-assumptions", "-loop-vectorize", "-libcall-aa", "-inline", "-constmerge", "-strip", "-slsr", "-tailcallelim", "-deadargelim", "-codegenprepare", "-debug-aa", "-separate-const-offset-from-gep", "-rewrite-symbols", "-scalar-evolution", "-instcombine", "-basicaa", "-bb-vectorize", "-loop-unroll", "-codegenprepare", "-lowerbitsets", "-correlated-propagation", "-constmerge", "-early-cse", "-loop-accesses", "-loop-distribute", "-memdep", "-globalopt", "-branch-prob", "-mem2reg", "-objc-arc-aa", "-place-safepoints", "-divergence", "-loops", "-basicaa", "-gvn", "-simplifycfg", "-break-crit-edges", "-cfl-aa", "-slsr", "-reg2mem", "-licm", "-cost-model", "-loop-interchange", "-partially-inline-libcalls", "-atomic-expand", "-partially-inline-libcalls", "-cost-model", "-strip", "-instcombine", "-objc-arc-aa", "-intervals", "-place-backedge-safepoints-impl", "-strip", "-instnamer", "-codegenprepare", "-deadargelim", "-cfl-aa", "-regions", "-scoped-noalias", "-constmerge", "-slsr", "-regions", "-scalarrepl-ssa", "-correlated-propagation", "-rewrite-symbols", "-sink", "-break-crit-edges", "-mergereturn", "-gvn", "-speculative-execution", "-loop-distribute", "-loops", "-loop-rotate", "-partial-inliner"],

["-ipsccp", "-objc-arc-contract", "-bdce", "-float2int", "-lcssa", "-place-backedge-safepoints-impl", "-slp-vectorizer", "-globaldce", "-lower-expect", "-intervals", "-simplifycfg", "-domfrontier", "-loop-interchange", "-memdep", "-alloca-hoisting", "-simplifycfg", "-sink", "-alloca-hoisting", "-strip-debug-declare", "-lint", "-loop-simplify", "-float2int", "-loop-vectorize", "-libcall-aa", "-loop-rotate", "-loop-vectorize", "-loop-unswitch", "-dce", "-instcombine", "-loop-instsimplify", "-scalarrepl-ssa", "-inline-cost", "-scalarrepl", "-mergereturn", "-float2int", "-safe-stack", "-consthoist", "-early-cse", "-loop-accesses", "-place-backedge-safepoints-impl", "-partially-inline-libcalls", "-constprop", "-atomic-expand", "-correlated-propagation", "-slp-vectorizer", "-scalarrepl-ssa", "-deadargelim", "-loop-unroll", "-mldst-motion", "-structurizecfg", "-mem2reg", "-break-crit-edges", "-loop-reroll", "-pa-eval", "-loop-extract", "-partial-inliner", "-scoped-noalias", "-cfl-aa", "-bb-vectorize", "-consthoist", "-nary-reassociate", "-safe-stack", "-rewrite-symbols", "-structurizecfg", "-basicaa", "-branch-prob", "-instcombine", "-strip-nondebug", "-mldst-motion", "-loop-reroll", "-reg2mem", "-load-combine", "-loop-unswitch", "-objc-arc-contract", "-scalarizer", "-intervals", "-licm", "-module-debuginfo", "-globaldce", "-indvars", "-sink", "-loop-rotate", "-verify", "-barrier", "-float2int", "-lcssa", "-libcall-aa", "-mergereturn", "-mergefunc", "-argpromotion", "-jump-threading", "-scalarrepl-ssa", "-objc-arc-apelim", "-place-safepoints", "-bb-vectorize", "-globaldce", "-lowerbitsets", "-intervals", "-sccp", "-separate-const-offset-from-gep", "-aa-eval", "-aa-eval", "-divergence", "-inline-cost", "-cost-model", "-domfrontier", "-speculative-execution", "-divergence", "-inline", "-basiccg", "-objc-arc-expand", "-lowerswitch", "-loop-unroll", "-lowerbitsets", "-jump-threading", "-objc-arc-contract", "-irce", "-objc-arc-aa", "-objc-arc", "-count-aa", "-branch-prob", "-regions", "-loop-simplify", "-postdomtree", "-mem2reg", "-sink", "-bb-vectorize"],

["-licm", "-reg2mem", "-loop-rotate", "-licm", "-early-cse", "-loop-unroll", "-separate-const-offset-from-gep", "-instcombine", "-scalarrepl-ssa", "-basicaa"],

["-lcssa", "-nary-reassociate", "-argpromotion", "-atomic-expand", "-mem2reg", "-strip-nondebug", "-break-crit-edges", "-place-backedge-safepoints-impl", "-slp-vectorizer", "-extract-blocks", "-bb-vectorize", "-intervals", "-cfl-aa", "-structurizecfg", "-loop-deletion", "-memcpyopt", "-extract-blocks", "-basicaa", "-branch-prob", "-scev-aa", "-inline", "-mldst-motion", "-instcombine", "-simplifycfg", "-sccp", "-load-combine", "-loop-unroll", "-tailcallelim", "-alloca-hoisting", "-partially-inline-libcalls", "-loop-instsimplify", "-loop-deletion", "-count-aa", "-speculative-execution", "-nary-reassociate", "-alignment-from-assumptions", "-slp-vectorizer", "-loweratomic", "-add-discriminators", "-verify", "-lower-expect", "-reg2mem", "-sccp", "-loop-simplify", "-jump-threading", "-rewrite-statepoints-for-gc", "-objc-arc-aa", "-scalar-evolution", "-scalar-evolution", "-mergefunc", "-safe-stack", "-branch-prob", "-loop-vectorize", "-loweratomic", "-lower-expect", "-nary-reassociate", "-divergence", "-die", "-break-crit-edges", "-elim-avail-extern", "-separate-const-offset-from-gep", "-flattencfg", "-dce", "-lowerbitsets", "-load-combine", "-instnamer", "-instcombine", "-place-backedge-safepoints-impl", "-pa-eval", "-loop-rotate", "-block-freq", "-scoped-noalias", "-objc-arc-expand", "-early-cse", "-loop-deletion", "-scalarrepl-ssa", "-simplifycfg", "-loops", "-loop-simplify", "-lazy-value-info", "-instsimplify", "-correlated-propagation", "-scoped-noalias", "-block-freq", "-mem2reg", "-loop-vectorize", "-objc-arc-apelim", "-loop-instsimplify", "-load-combine", "-loop-reroll", "-adce", "-add-discriminators", "-indvars", "-strip-nondebug", "-reassociate", "-basicaa", "-targetlibinfo", "-loop-reduce", "-sancov", "-scalarrepl", "-loop-unroll", "-debug-aa", "-bb-vectorize", "-instrprof", "-instnamer", "-tailcallelim", "-add-discriminators", "-correlated-propagation", "-gvn", "-lint", "-instnamer", "-early-cse", "-ipsccp", "-constmerge", "-instcount", "-inline-cost", "-loop-reroll", "-no-aa", "-regions", "-place-safepoints", "-flattencfg", "-strip-debug-declare", "-instsimplify", "-objc-arc-contract", "-loop-reduce", "-always-inline"],

["-licm", "-separate-const-offset-from-gep", "-scalarizer", "-codegenprepare", "-gvn", "-reg2mem", "-licm", "-codegenprepare", "-irce", "-reg2mem", "-loop-rotate", "-instcombine", "-basicaa", "-loop-rotate", "-licm", "-licm", "-objc-arc-apelim", "-loop-unswitch", "-scalarrepl-ssa", "-loop-extract-single", "-gvn"],

["-mem2reg", "-reg2mem", "-memcpyopt", "-gvn", "-loop-rotate", "-mem2reg", "-basicaa", "-indvars", "-instsimplify", "-loop-reduce", "-loop-unroll", "-reg2mem", "-licm", "-sroa"],

["-scalarrepl", "-loop-rotate", "-indvars", "-structurizecfg", "-strip-nondebug", "-loop-reduce", "-instcombine"],

["-codegenprepare", "-scalarrepl", "-ipconstprop", "-loop-idiom", "-loop-rotate", "-loop-reduce", "-bdce", "-instsimplify", "-scev-aa", "-sancov", "-loop-unswitch", "-speculative-execution", "-simplifycfg", "-strip-debug-declare", "-safe-stack", "-intervals", "-loop-accesses", "-partial-inliner", "-loweratomic", "-sroa", "-loop-reroll", "-always-inline", "-divergence", "-mergereturn", "-separate-const-offset-from-gep", "-objc-arc-aa", "-loop-rotate", "-adce", "-no-aa", "-delinearize", "-instcount", "-domtree", "-loop-unswitch", "-nary-reassociate", "-instsimplify", "-functionattrs", "-postdomtree", "-instsimplify", "-cfl-aa", "-loop-interchange", "-slsr", "-scalarizer", "-tailcallelim", "-scalarrepl-ssa", "-loop-unroll", "-memdep", "-tailcallelim", "-debug-aa", "-consthoist", "-break-crit-edges", "-instcombine", "-delinearize", "-divergence", "-aa-eval", "-loop-rotate", "-mergereturn", "-always-inline", "-lcssa", "-block-freq", "-loop-unswitch", "-rewrite-statepoints-for-gc", "-basiccg", "-delinearize", "-module-debuginfo", "-atomic-expand", "-prune-eh", "-argpromotion", "-loop-deletion", "-basicaa", "-break-crit-edges", "-globalopt", "-targetlibinfo", "-objc-arc-apelim", "-mldst-motion", "-licm", "-break-crit-edges", "-constmerge", "-mem2reg", "-loop-unswitch", "-loop-reduce", "-assumption-cache-tracker", "-tailcallelim", "-lowerinvoke", "-scev-aa", "-loop-rotate", "-add-discriminators", "-loop-extract", "-licm", "-tti", "-module-debuginfo", "-constprop", "-instsimplify", "-memdep", "-strip-debug-declare", "-place-safepoints", "-loops", "-loop-reduce", "-ipsccp", "-sancov", "-scalarizer", "-loop-rotate", "-jump-threading", "-alignment-from-assumptions", "-safe-stack", "-da", "-scalarrepl", "-objc-arc-apelim", "-inline", "-module-debuginfo", "-loop-unswitch", "-loop-extract", "-sink", "-jump-threading", "-instnamer", "-targetlibinfo", "-partially-inline-libcalls", "-dse", "-tbaa", "-add-discriminators", "-loop-rotate", "-objc-arc-contract", "-inline", "-loop-unswitch", "-branch-prob", "-alloca-hoisting", "-gvn", "-intervals", "-sccp"],

["-loop-rotate", "-codegenprepare", "-strip-debug-declare", "-sroa", "-loop-unswitch", "-loop-reduce", "-loop-rotate", "-loop-unroll", "-dce", "-loop-extract", "-codegenprepare", "-loop-reduce", "-loop-deletion", "-gvn", "-structurizecfg", "-instcombine", "-reg2mem", "-instcombine", "-jump-threading", "-deadargelim", "-die", "-inline", "-scalarrepl", "-licm", "-strip-debug-declare", "-loop-unswitch", "-simplifycfg", "-loop-extract", "-gvn", "-structurizecfg", "-sink", "-jump-threading", "-inline"],

["-licm", "-loop-rotate", "-basicaa", "-instcombine", "-licm", "-loop-reduce", "-simplifycfg", "-loop-reduce", "-scalarrepl", "-loop-unroll", "-early-cse", "-instcombine", "-reg2mem", "-instcombine", "-reg2mem", "-scalarrepl-ssa", "-lcssa", "-loop-reduce"],

["-loop-rotate", "-gvn", "-mem2reg", "-indvars", "-basicaa", "-structurizecfg", "-loop-reduce", "-instcombine", "-loop-unroll", "-globalsmodref-aa", "-loop-reduce", "-reg2mem", "-extract-blocks", "-structurizecfg", "-inline", "-scalarrepl", "-jump-threading"],

["-domtree", "-deadargelim", "-cfl-aa", "-block-freq", "-functionattrs", "-safe-stack", "-lower-expect", "-loop-simplify", "-sink", "-place-safepoints", "-sancov", "-alloca-hoisting", "-float2int", "-ipsccp", "-partial-inliner", "-lcssa", "-constprop", "-instcount", "-loop-deletion", "-debug-aa", "-inline-cost", "-bdce", "-flattencfg", "-scalarrepl", "-objc-arc-aa", "-bdce", "-scalar-evolution", "-float2int", "-lazy-value-info", "-strip-dead-prototypes", "-strip-debug-declare", "-scev-aa", "-alignment-from-assumptions", "-objc-arc-expand", "-functionattrs", "-lint", "-mergefunc", "-mergefunc", "-loop-idiom", "-simplifycfg", "-sink", "-ipsccp", "-reassociate", "-atomic-expand", "-deadargelim", "-place-safepoints", "-reassociate", "-iv-users", "-mergereturn", "-inline", "-loops", "-mergefunc", "-lowerswitch", "-loop-reduce", "-sccp", "-strip", "-loop-extract-single", "-loop-rotate", "-place-backedge-safepoints-impl", "-domtree", "-prune-eh", "-loweratomic", "-speculative-execution", "-lowerinvoke", "-inline", "-dce", "-loop-reduce", "-inline-cost", "-break-crit-edges", "-da", "-domfrontier", "-structurizecfg", "-domfrontier", "-mergefunc", "-strip-dead-prototypes", "-speculative-execution", "-pa-eval", "-loops", "-instrprof", "-jump-threading", "-instnamer", "-alloca-hoisting", "-objc-arc-apelim", "-cost-model", "-sink", "-loop-reroll", "-loweratomic", "-da", "-targetlibinfo", "-barrier", "-gvn", "-constmerge", "-instcombine", "-globalopt", "-dce", "-objc-arc-apelim", "-loop-unroll", "-instsimplify", "-reassociate", "-separate-const-offset-from-gep", "-indvars", "-domtree", "-slp-vectorizer", "-indvars", "-constprop", "-lowerswitch", "-rewrite-symbols", "-licm", "-gvn", "-indvars", "-nary-reassociate", "-instnamer", "-strip-dead-debug-info", "-assumption-cache-tracker", "-float2int", "-debug-aa", "-objc-arc-contract", "-memcpyopt", "-scalarrepl", "-bb-vectorize", "-strip-nondebug", "-scalarizer", "-inline", "-domtree", "-libcall-aa"],

["-sroa", "-loop-rotate", "-indvars", "-structurizecfg", "-loop-reduce", "-instcombine", "-early-cse", "-loop-unroll", "-irce", "-indvars", "-instsimplify"],

["-loop-rotate", "-scalarrepl-ssa", "-loop-vectorize", "-codegenprepare", "-debug-aa", "-indvars", "-extract-blocks", "-instcombine", "-loop-reduce", "-inline", "-break-crit-edges", "-scalarrepl-ssa", "-jump-threading", "-gvn", "-extract-blocks", "-reassociate", "-simplifycfg", "-inline"],

["-loop-rotate", "-structurizecfg", "-instcombine", "-gvn", "-scalarrepl-ssa", "-loop-vectorize", "-scalarizer", "-reg2mem", "-gvn", "-inline-cost", "-loop-extract", "-instcombine", "-inline", "-reg2mem", "-jump-threading", "-cfl-aa", "-loop-extract-single", "-mergefunc", "-loop-rotate", "-sink", "-sroa", "-codegenprepare"],

["-sroa", "-loop-rotate", "-indvars", "-loop-reduce", "-instcombine", "-codegenprepare", "-argpromotion", "-bounds-checking", "-loop-unroll"],

["-loop-rotate", "-extract-blocks", "-instcombine", "-inline", "-reg2mem", "-prune-eh", "-mem2reg", "-extract-blocks", "-gvn", "-loop-extract", "-extract-blocks", "-jump-threading", "-reg2mem", "-extract-blocks", "-ipconstprop", "-jump-threading", "-inline", "-loop-unroll", "-jump-threading", "-gvn", "-simplifycfg", "-loop-rotate", "-instcombine", "-count-aa", "-mem2reg", "-licm", "-loop-extract", "-inline", "-simplifycfg", "-sink"],

["-scalarrepl-ssa", "-loop-rotate", "-loop-vectorize", "-indvars", "-instcombine", "-jump-threading", "-gvn", "-reg2mem", "-loop-rotate", "-reg2mem", "-sroa", "-structurizecfg", "-loop-instsimplify", "-sink", "-basicaa", "-instcombine", "-break-crit-edges", "-structurizecfg", "-jump-threading"],

["-loop-rotate", "-structurizecfg", "-gvn", "-instcombine", "-loop-vectorize", "-loop-interchange", "-sink", "-lowerbitsets", "-loop-extract", "-instcombine", "-licm", "-extract-blocks", "-reassociate", "-scalarizer", "-inline", "-basicaa", "-elim-avail-extern", "-mem2reg", "-loop-extract-single", "-indvars", "-simplifycfg", "-correlated-propagation", "-constprop"],

["-loop-rotate", "-scalarrepl", "-loop-unroll", "-indvars", "-licm", "-barrier", "-loop-reduce", "-loop-unswitch", "-codegenprepare", "-always-inline", "-reassociate", "-loop-unswitch", "-ipsccp", "-loop-extract-single", "-jump-threading", "-loop-deletion", "-instcombine", "-loop-unswitch", "-speculative-execution"],

["-mergefunc", "-licm", "-mergereturn", "-da", "-scalarizer", "-strip", "-globaldce", "-place-safepoints", "-sccp", "-bounds-checking", "-loop-distribute", "-instcombine", "-loop-deletion", "-correlated-propagation", "-functionattrs", "-strip-dead-debug-info", "-pa-eval", "-instcombine", "-break-crit-edges", "-loop-reduce", "-licm", "-tbaa", "-strip-nondebug", "-aa-eval", "-bb-vectorize", "-scalarrepl-ssa", "-sink", "-loop-distribute", "-scalarrepl-ssa", "-loop-idiom", "-loop-rotate", "-delinearize", "-loops", "-indvars", "-loop-unroll", "-load-combine", "-regions", "-loop-rotate", "-loop-interchange", "-lint", "-scev-aa", "-scalarizer", "-gvn", "-lower-expect", "-lcssa", "-divergence", "-dce", "-regions", "-divergence", "-place-backedge-safepoints-impl", "-partial-inliner", "-partially-inline-libcalls", "-instcombine", "-debug-aa", "-debug-aa", "-reassociate", "-ipconstprop", "-da", "-domfrontier", "-objc-arc", "-barrier", "-loop-distribute", "-lower-expect", "-no-aa", "-speculative-execution", "-objc-arc-expand", "-partially-inline-libcalls", "-loop-reduce", "-lint", "-loop-reduce", "-safe-stack", "-bdce", "-scoped-noalias", "-mldst-motion", "-inline", "-alloca-hoisting", "-atomic-expand", "-divergence", "-basiccg", "-slp-vectorizer", "-cfl-aa", "-strip-nondebug", "-count-aa", "-loop-deletion", "-flattencfg", "-loop-vectorize", "-lint", "-cfl-aa", "-lowerbitsets", "-inline-cost", "-gvn", "-codegenprepare", "-module-debuginfo", "-loop-unswitch", "-strip-dead-debug-info", "-reassociate", "-loop-reduce", "-argpromotion", "-instnamer", "-loop-instsimplify", "-strip-dead-prototypes", "-place-backedge-safepoints-impl", "-loop-reduce", "-loop-unswitch", "-lowerbitsets", "-functionattrs", "-lazy-value-info", "-alignment-from-assumptions", "-basicaa", "-sink", "-scalar-evolution", "-loop-reduce", "-loop-instsimplify", "-scalarrepl-ssa", "-inline-cost", "-strip-nondebug", "-dse", "-licm", "-adce", "-mldst-motion"],

["-deadargelim", "-delinearize", "-postdomtree", "-partially-inline-libcalls", "-loop-distribute", "-scev-aa", "-strip", "-scalarrepl", "-globalopt", "-strip-nondebug", "-bounds-checking", "-loops", "-reg2mem", "-loops", "-instrprof", "-barrier", "-ipconstprop", "-loop-extract-single", "-partial-inliner", "-strip-dead-prototypes", "-loop-extract", "-loop-extract", "-rewrite-symbols", "-lazy-value-info", "-break-crit-edges", "-partially-inline-libcalls", "-strip-dead-prototypes", "-instrprof", "-scalarizer", "-strip-dead-debug-info", "-atomic-expand", "-flattencfg", "-sancov", "-sroa", "-break-crit-edges", "-mergereturn", "-load-combine", "-strip-debug-declare", "-sancov", "-no-aa", "-loop-rotate", "-loop-reduce", "-scalarizer", "-mergefunc", "-place-safepoints", "-instnamer", "-sink", "-loop-accesses", "-tti", "-libcall-aa", "-sroa", "-debug-aa", "-partial-inliner", "-block-freq", "-lazy-value-info", "-loop-distribute", "-lowerswitch", "-loop-reroll", "-nary-reassociate", "-scalarizer", "-strip-debug-declare", "-nary-reassociate", "-mem2reg", "-mem2reg", "-load-combine", "-mldst-motion", "-simplifycfg", "-correlated-propagation", "-loop-rotate", "-strip-nondebug", "-always-inline", "-slp-vectorizer", "-rewrite-statepoints-for-gc", "-place-safepoints", "-mergereturn", "-cfl-aa", "-sroa", "-inline", "-lower-expect", "-speculative-execution", "-deadargelim", "-divergence", "-tbaa", "-branch-prob", "-verify", "-prune-eh", "-instsimplify", "-add-discriminators", "-tbaa", "-scoped-noalias", "-lcssa", "-aa-eval", "-objc-arc-expand", "-early-cse", "-scalarrepl", "-module-debuginfo", "-alignment-from-assumptions", "-correlated-propagation", "-objc-arc-apelim", "-instcount", "-nary-reassociate", "-instcombine", "-scoped-noalias", "-load-combine", "-place-backedge-safepoints-impl", "-correlated-propagation", "-loop-reduce", "-loop-rotate", "-loop-unswitch", "-loop-reduce", "-no-aa", "-simplifycfg", "-place-backedge-safepoints-impl", "-gvn", "-postdomtree", "-dse", "-lcssa", "-structurizecfg", "-loop-unswitch", "-bb-vectorize", "-loop-extract", "-sink", "-tbaa", "-inline-cost", "-tbaa", "-constprop", "-basiccg", "-mergereturn"],

["-basiccg", "-mldst-motion", "-loop-simplify", "-argpromotion", "-scev-aa", "-slsr", "-bdce", "-rewrite-statepoints-for-gc", "-nary-reassociate", "-module-debuginfo", "-slsr", "-loop-rotate", "-loop-simplify", "-intervals", "-divergence", "-loop-extract", "-da", "-loop-unroll", "-block-freq", "-instrprof", "-loop-distribute", "-float2int", "-inline", "-tbaa", "-break-crit-edges", "-globaldce", "-structurizecfg", "-scalar-evolution", "-partial-inliner", "-module-debuginfo", "-no-aa", "-tti", "-globalopt", "-barrier", "-domtree", "-gvn", "-jump-threading", "-correlated-propagation", "-objc-arc-apelim", "-lowerinvoke", "-tailcallelim", "-die", "-objc-arc-aa", "-strip-dead-prototypes", "-postdomtree", "-pa-eval", "-lower-expect", "-loop-extract", "-correlated-propagation", "-instcount", "-rewrite-symbols", "-simplifycfg", "-reassociate", "-count-aa", "-da", "-add-discriminators", "-loop-instsimplify", "-divergence", "-inline", "-die", "-sroa", "-regions", "-pa-eval", "-codegenprepare", "-basicaa", "-basicaa", "-loop-unroll", "-break-crit-edges", "-barrier", "-mldst-motion", "-domfrontier", "-scoped-noalias", "-codegenprepare", "-break-crit-edges", "-always-inline", "-dce", "-loop-interchange", "-alloca-hoisting", "-float2int", "-barrier", "-die", "-branch-prob", "-cost-model", "-tti", "-reassociate", "-loop-idiom", "-basicaa", "-alloca-hoisting", "-ipsccp", "-count-aa", "-strip-dead-prototypes", "-targetlibinfo", "-place-safepoints", "-basiccg", "-mergefunc", "-bb-vectorize", "-verify", "-scalarrepl", "-lowerswitch", "-globalsmodref-aa", "-bdce", "-loop-distribute", "-nary-reassociate", "-flattencfg", "-separate-const-offset-from-gep", "-memcpyopt", "-early-cse", "-ipsccp", "-deadargelim", "-prune-eh", "-regions", "-aa-eval", "-lcssa", "-loop-reroll", "-targetlibinfo", "-iv-users", "-pa-eval", "-strip-dead-prototypes", "-always-inline", "-deadargelim", "-loop-interchange", "-place-safepoints", "-partially-inline-libcalls", "-strip-nondebug", "-place-safepoints", "-dce", "-cfl-aa", "-gvn"],

["-instsimplify", "-place-safepoints", "-place-backedge-safepoints-impl", "-constprop", "-lower-expect", "-instsimplify", "-break-crit-edges", "-lowerswitch", "-float2int", "-alignment-from-assumptions", "-mergereturn", "-divergence", "-early-cse", "-lazy-value-info", "-memcpyopt", "-instsimplify", "-jump-threading", "-basiccg", "-sccp", "-globaldce", "-consthoist", "-indvars", "-reg2mem", "-loop-simplify", "-structurizecfg", "-safe-stack", "-elim-avail-extern", "-scev-aa", "-mergefunc", "-domtree", "-loop-reroll", "-cost-model", "-module-debuginfo", "-regions", "-bounds-checking", "-scalarrepl", "-mldst-motion", "-scoped-noalias", "-loop-reduce", "-verify", "-mergereturn", "-extract-blocks", "-strip-debug-declare", "-lint", "-ipsccp", "-sroa", "-lowerbitsets", "-correlated-propagation", "-inline", "-simplifycfg", "-tailcallelim", "-argpromotion", "-loop-extract", "-simplifycfg", "-instnamer", "-basiccg", "-adce", "-dse", "-partial-inliner", "-inline-cost", "-loop-extract", "-loop-instsimplify", "-strip-dead-prototypes", "-partial-inliner", "-rewrite-statepoints-for-gc", "-domfrontier", "-slsr", "-intervals", "-loop-rotate", "-loops", "-alignment-from-assumptions", "-loop-reduce", "-loop-extract", "-loop-reduce", "-nary-reassociate", "-place-safepoints", "-irce", "-die", "-atomic-expand", "-gvn", "-lint", "-functionattrs", "-libcall-aa", "-strip", "-flattencfg", "-instnamer", "-lowerinvoke", "-delinearize", "-scalarizer", "-tailcallelim", "-instnamer", "-add-discriminators", "-cfl-aa", "-block-freq", "-strip", "-lowerinvoke", "-elim-avail-extern", "-jump-threading", "-sroa", "-dce", "-basicaa", "-die", "-instcombine", "-strip-debug-declare", "-alloca-hoisting", "-float2int", "-rewrite-statepoints-for-gc", "-loop-instsimplify", "-mldst-motion", "-separate-const-offset-from-gep", "-lazy-value-info", "-early-cse", "-bb-vectorize", "-loop-rotate", "-loop-reduce", "-strip-debug-declare", "-instcount", "-objc-arc-aa", "-die", "-scalarizer", "-gvn", "-memdep", "-regions", "-functionattrs", "-safe-stack"],

["-early-cse", "-sroa", "-instcombine", "-reassociate", "-loop-extract-single", "-sink", "-separate-const-offset-from-gep", "-licm", "-loop-rotate", "-reg2mem", "-licm", "-simplifycfg", "-gvn", "-partial-inliner", "-loop-reduce", "-rewrite-symbols", "-licm", "-slsr", "-loop-extract", "-sroa", "-reg2mem", "-inline", "-basicaa", "-instcombine", "-gvn", "-deadargelim", "-licm", "-instcombine"],

["-loop-extract", "-reassociate", "-loop-rotate", "-extract-blocks", "-gvn", "-instcombine", "-inline", "-sroa", "-gvn", "-simplifycfg", "-break-crit-edges", "-basicaa", "-slsr", "-loop-reduce", "-speculative-execution", "-reassociate", "-loop-extract", "-jump-threading", "-instrprof", "-indvars", "-loop-rotate", "-codegenprepare"],

["-codegenprepare", "-mem2reg", "-loop-reduce", "-extract-blocks", "-loop-extract", "-instcombine", "-simplifycfg", "-loop-rotate", "-partial-inliner", "-reg2mem", "-structurizecfg", "-jump-threading", "-inline", "-sccp", "-scalarrepl", "-loop-reduce", "-loop-unswitch", "-deadargelim", "-loop-rotate", "-loop-unroll", "-indvars"],

["-early-cse", "-bdce", "-partial-inliner", "-simplifycfg", "-loop-rotate", "-loop-idiom", "-licm", "-domfrontier", "-argpromotion", "-barrier", "-rewrite-symbols", "-mergereturn", "-objc-arc-apelim", "-bb-vectorize", "-indvars", "-break-crit-edges", "-structurizecfg", "-memdep", "-ipconstprop", "-irce", "-instrprof", "-memcpyopt", "-jump-threading", "-inline", "-no-aa", "-consthoist", "-instcount", "-loop-extract", "-instrprof", "-loop-deletion", "-loop-reduce", "-basiccg", "-mem2reg", "-aa-eval", "-simplifycfg", "-sancov", "-inline", "-da", "-scalarrepl", "-codegenprepare", "-reg2mem", "-strip", "-strip-dead-prototypes", "-die", "-alloca-hoisting", "-slsr", "-lower-expect", "-licm", "-loop-extract", "-objc-arc-contract", "-bb-vectorize", "-place-backedge-safepoints-impl", "-globalopt", "-count-aa", "-loop-vectorize", "-sink", "-structurizecfg", "-simplifycfg", "-strip-dead-debug-info", "-objc-arc-aa", "-instrprof", "-loop-vectorize", "-inline", "-add-discriminators", "-sroa", "-codegenprepare", "-basicaa", "-intervals"],

["-basicaa", "-sroa", "-reg2mem", "-early-cse", "-simplifycfg", "-loop-rotate", "-reassociate", "-licm", "-loop-instsimplify", "-scalarrepl-ssa", "-indvars", "-loop-extract-single", "-codegenprepare", "-inline", "-loop-reduce", "-codegenprepare"],

["-basicaa", "-partial-inliner", "-simplifycfg", "-deadargelim", "-loop-rotate", "-scalarrepl", "-loop-vectorize", "-extract-blocks", "-branch-prob", "-debug-aa", "-strip", "-assumption-cache-tracker", "-loop-extract-single", "-indvars", "-gvn", "-loop-idiom", "-structurizecfg", "-inline", "-loop-reduce", "-loop-extract-single", "-reg2mem", "-strip-debug-declare", "-instcombine", "-early-cse", "-consthoist", "-codegenprepare", "-scalarrepl", "-cfl-aa", "-sancov", "-jump-threading"],

["-loop-rotate", "-scalarrepl", "-indvars", "-mldst-motion", "-loop-reduce", "-separate-const-offset-from-gep", "-adce", "-correlated-propagation", "-gvn", "-inline", "-mem2reg", "-bounds-checking", "-tailcallelim", "-add-discriminators", "-strip", "-libcall-aa", "-loop-distribute", "-instnamer", "-slsr", "-globalsmodref-aa", "-instcombine", "-loop-unroll", "-early-cse", "-sink"],

["-basiccg", "-loop-rotate", "-objc-arc-aa", "-structurizecfg", "-loop-accesses", "-place-safepoints", "-bdce", "-irce", "-no-aa", "-strip-debug-declare", "-lowerbitsets", "-aa-eval", "-lower-expect", "-sroa", "-strip-debug-declare", "-loop-unswitch", "-jump-threading", "-dce", "-slp-vectorizer", "-lowerbitsets", "-die", "-strip-dead-prototypes", "-tailcallelim", "-globalsmodref-aa", "-reg2mem", "-correlated-propagation", "-gvn", "-partially-inline-libcalls", "-loop-rotate", "-sancov", "-delinearize", "-strip-nondebug", "-domfrontier", "-loop-deletion", "-block-freq", "-load-combine", "-block-freq", "-codegenprepare", "-intervals", "-rewrite-symbols", "-cfl-aa", "-basicaa", "-functionattrs", "-mergereturn", "-dce", "-scev-aa", "-lint", "-strip-debug-declare", "-bounds-checking", "-targetlibinfo", "-gvn", "-loop-vectorize", "-argpromotion", "-divergence", "-loop-instsimplify", "-nary-reassociate", "-globalsmodref-aa", "-place-backedge-safepoints-impl", "-safe-stack", "-loop-interchange", "-loop-instsimplify", "-libcall-aa", "-inline", "-ipsccp", "-partial-inliner", "-instcombine", "-licm", "-scoped-noalias", "-loop-unswitch", "-verify", "-place-backedge-safepoints-impl", "-memcpyopt", "-inline-cost", "-lazy-value-info", "-globalsmodref-aa", "-count-aa", "-consthoist", "-strip-debug-declare", "-loop-extract-single", "-block-freq", "-module-debuginfo", "-tailcallelim", "-scev-aa", "-pa-eval", "-rewrite-statepoints-for-gc", "-intervals", "-ipsccp", "-loop-vectorize", "-sancov", "-lazy-value-info", "-loop-rotate", "-loop-vectorize", "-indvars", "-lowerbitsets", "-scalarrepl-ssa", "-lowerinvoke", "-sccp", "-delinearize", "-flattencfg", "-domfrontier", "-alignment-from-assumptions", "-lint", "-functionattrs", "-scalarrepl", "-divergence", "-libcall-aa", "-simplifycfg", "-loop-deletion", "-targetlibinfo", "-instcombine", "-regions", "-lowerbitsets", "-basicaa", "-debug-aa", "-gvn", "-loops", "-simplifycfg", "-scalarizer", "-lazy-value-info", "-loop-vectorize", "-speculative-execution", "-constmerge", "-separate-const-offset-from-gep", "-barrier", "-instcombine"],

["-scalarrepl", "-loop-reduce", "-loop-rotate", "-basicaa", "-loop-unroll", "-jump-threading", "-separate-const-offset-from-gep", "-instcombine", "-bb-vectorize", "-loop-unroll", "-indvars", "-extract-blocks", "-separate-const-offset-from-gep", "-mergefunc", "-extract-blocks", "-functionattrs", "-licm", "-inline", "-simplifycfg", "-instcombine"],

["-mem2reg", "-loop-reduce", "-loop-rotate", "-loop-unroll", "-indvars", "-instcombine"],

["-licm", "-loop-rotate", "-loop-extract-single", "-basicaa", "-codegenprepare", "-reassociate", "-inline", "-gvn", "-reassociate", "-instcombine", "-loop-vectorize", "-loop-unroll", "-sink", "-scalarizer", "-basiccg", "-simplifycfg", "-sccp", "-irce", "-bb-vectorize", "-codegenprepare", "-die", "-lower-expect", "-separate-const-offset-from-gep", "-licm", "-scalarizer", "-sink"],

["-targetlibinfo", "-globalopt", "-objc-arc-contract", "-count-aa", "-lint", "-lcssa", "-count-aa", "-lazy-value-info", "-lowerbitsets", "-mldst-motion", "-loop-deletion", "-prune-eh", "-extract-blocks", "-mergefunc", "-strip-dead-prototypes", "-strip-nondebug", "-basicaa", "-always-inline", "-tti", "-no-aa", "-loop-vectorize", "-loop-rotate", "-constprop", "-rewrite-symbols", "-scalarrepl", "-lower-expect", "-sancov", "-rewrite-symbols", "-functionattrs", "-codegenprepare", "-loop-simplify", "-tbaa", "-float2int", "-inline", "-cost-model", "-structurizecfg", "-aa-eval", "-sancov", "-loop-unswitch", "-divergence", "-simplifycfg", "-nary-reassociate", "-atomic-expand", "-inline", "-speculative-execution", "-place-backedge-safepoints-impl", "-regions", "-lowerswitch", "-correlated-propagation", "-tailcallelim", "-sink", "-instrprof", "-float2int", "-tbaa", "-alignment-from-assumptions", "-strip-nondebug", "-delinearize", "-gvn", "-reassociate", "-count-aa", "-licm", "-consthoist", "-loop-unroll", "-correlated-propagation", "-tailcallelim", "-place-backedge-safepoints-impl", "-scalarrepl", "-instsimplify", "-globalopt", "-ipconstprop", "-instcombine", "-divergence", "-intervals", "-mergereturn", "-module-debuginfo", "-basiccg", "-constmerge", "-tbaa", "-loop-unroll", "-loop-unswitch", "-cfl-aa", "-scalar-evolution", "-dce", "-lower-expect", "-break-crit-edges", "-float2int", "-instcount", "-lazy-value-info", "-early-cse", "-inline-cost", "-barrier", "-tbaa", "-loop-unroll", "-block-freq", "-loop-reduce", "-indvars", "-scalarrepl", "-bdce", "-codegenprepare", "-objc-arc-contract", "-branch-prob", "-argpromotion", "-consthoist", "-scalarrepl", "-objc-arc", "-functionattrs", "-scalar-evolution", "-safe-stack", "-objc-arc-apelim", "-constprop", "-loop-interchange", "-jump-threading", "-regions", "-jump-threading", "-slp-vectorizer", "-lazy-value-info", "-gvn", "-add-discriminators", "-reassociate", "-mergefunc", "-simplifycfg", "-partially-inline-libcalls", "-delinearize", "-constmerge", "-dse", "-mergereturn", "-simplifycfg", "-lazy-value-info"],

["-lower-expect", "-strip-debug-declare", "-reg2mem", "-reassociate", "-loop-vectorize", "-break-crit-edges", "-loop-unroll", "-regions", "-globalsmodref-aa", "-die", "-lcssa", "-place-backedge-safepoints-impl", "-sink", "-scalarrepl", "-strip-dead-debug-info", "-tailcallelim", "-loop-rotate", "-loop-simplify", "-loop-extract", "-functionattrs", "-mergereturn", "-early-cse", "-jump-threading", "-add-discriminators", "-loop-rotate", "-loop-reduce", "-cost-model", "-delinearize", "-licm", "-sccp", "-postdomtree", "-jump-threading", "-strip-debug-declare", "-targetlibinfo", "-tbaa", "-irce", "-slp-vectorizer", "-divergence", "-scev-aa", "-tbaa", "-flattencfg", "-dce", "-inline", "-adce", "-adce", "-bdce", "-scalarrepl", "-inline", "-add-discriminators", "-loop-distribute", "-da", "-objc-arc-expand", "-irce", "-ipconstprop", "-lowerinvoke", "-basiccg", "-instrprof", "-lowerbitsets", "-float2int", "-lowerswitch", "-slp-vectorizer", "-loops", "-basiccg", "-scalarizer", "-structurizecfg", "-strip-nondebug", "-objc-arc-apelim", "-instsimplify", "-alignment-from-assumptions", "-loop-simplify", "-regions", "-block-freq", "-bounds-checking", "-assumption-cache-tracker", "-block-freq", "-memcpyopt", "-load-combine", "-separate-const-offset-from-gep", "-alignment-from-assumptions", "-iv-users", "-inline", "-barrier", "-regions", "-scoped-noalias", "-branch-prob", "-loop-unroll", "-memdep", "-objc-arc-expand", "-lcssa", "-partially-inline-libcalls", "-loops", "-loop-accesses", "-basiccg", "-reassociate", "-loop-deletion", "-loop-unswitch", "-lcssa", "-loop-unswitch", "-place-backedge-safepoints-impl", "-separate-const-offset-from-gep", "-float2int", "-lowerbitsets", "-postdomtree", "-block-freq", "-globalsmodref-aa", "-objc-arc-expand", "-prune-eh", "-loop-unroll", "-tti", "-gvn", "-scalar-evolution", "-basiccg", "-loop-distribute", "-instnamer", "-nary-reassociate", "-elim-avail-extern", "-regions", "-cfl-aa", "-globaldce", "-scalarizer", "-sink", "-mergefunc", "-aa-eval", "-constprop", "-ipsccp", "-jump-threading", "-deadargelim", "-loop-distribute"],

["-scalarrepl-ssa", "-loop-rotate", "-loop-extract", "-reg2mem", "-simplifycfg", "-inline", "-codegenprepare", "-scalarrepl", "-ipconstprop", "-structurizecfg", "-structurizecfg", "-reg2mem", "-licm", "-mem2reg", "-loop-rotate", "-sink", "-basicaa"],

["-licm", "-separate-const-offset-from-gep", "-reg2mem", "-licm", "-codegenprepare", "-instcombine", "-strip-dead-debug-info", "-sroa", "-codegenprepare", "-basicaa", "-loop-rotate", "-loop-extract-single", "-extract-blocks", "-intervals", "-float2int", "-safe-stack", "-add-discriminators", "-libcall-aa", "-functionattrs", "-safe-stack", "-cfl-aa", "-reassociate", "-prune-eh", "-extract-blocks", "-inline", "-intervals", "-cfl-aa", "-sroa", "-adce", "-jump-threading", "-add-discriminators", "-lint", "-loop-distribute"],

["-instcount", "-globalopt", "-cfl-aa", "-aa-eval", "-inline-cost", "-iv-users", "-objc-arc-contract", "-lowerinvoke", "-gvn", "-block-freq", "-functionattrs", "-ipsccp", "-deadargelim", "-jump-threading", "-targetlibinfo", "-sroa", "-verify", "-flattencfg", "-dse", "-globalopt", "-tti", "-tbaa", "-scalarrepl", "-extract-blocks", "-alignment-from-assumptions", "-sancov", "-add-discriminators", "-aa-eval", "-scalarizer", "-basiccg", "-elim-avail-extern", "-functionattrs", "-instnamer", "-load-combine", "-reassociate", "-branch-prob", "-lowerbitsets", "-dce", "-debug-aa", "-loop-unroll", "-slsr", "-simplifycfg", "-dce", "-delinearize", "-sccp", "-loop-extract-single", "-scalarrepl-ssa", "-basiccg", "-inline-cost", "-globalopt", "-gvn", "-assumption-cache-tracker", "-sink", "-strip", "-ipconstprop", "-loop-vectorize", "-verify", "-objc-arc-aa", "-count-aa", "-instnamer", "-instrprof", "-lcssa", "-reg2mem", "-consthoist", "-flattencfg", "-inline", "-module-debuginfo", "-dse", "-alignment-from-assumptions", "-early-cse", "-dce", "-reassociate", "-iv-users", "-partially-inline-libcalls", "-globalsmodref-aa", "-tti", "-globalopt", "-slp-vectorizer", "-codegenprepare", "-mergefunc", "-reg2mem", "-targetlibinfo", "-loop-rotate", "-barrier", "-strip-dead-prototypes", "-adce", "-alloca-hoisting", "-libcall-aa", "-basiccg", "-globalsmodref-aa", "-loop-instsimplify", "-sink", "-separate-const-offset-from-gep", "-globalsmodref-aa", "-mldst-motion", "-objc-arc-aa", "-loop-idiom", "-objc-arc-expand", "-regions", "-bdce", "-globalopt", "-scalarrepl-ssa", "-instcombine", "-scoped-noalias", "-loop-rotate", "-bb-vectorize", "-mldst-motion"]
       ];

end
